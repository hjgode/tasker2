TASKER2

function description

	start

		check if already running, MUTEX code
		
		get actual time, maybe not the time tasker.exe was started due to blocked MUTEX
		
		get the actual path and name of TASKER2.exe, used for schedules
		
		read registry keys, if error then EXIT
		
		check for valid date (11/2011), if not exit
		
		write version info to REG
		
		check for ARGS
			
			No Args: clear and re-schedule all event and time based TASKs
			
			One ARG (except the exe name itself):
				-c
				clear all schedules. used to remove all time and event based schedules
				usefull if TASKER2 exe has been moved or to stop all TASKER2 activities
				
				APP_RUN_AT_TIME (AppRunAtTime)
				(this should never be called, as TASKER2 is always started with "[-s|-k] task[i]"
				maybe generated by scheduler
					re-schedule all event and active time based tasks (first clear and then add new tasks)
						uses scheduleAllTasks() with createNextSchedule(...)
						saves new NextStart and NextStop information to REG
					
				APP_RUN_AFTER_TIME_CHANGE (AppRunAfterTimeChange) or APP_RUN_AFTER_TZ_CHANGE (AppRunAfterTzChange)
				generated by scheduler when time or timezone changes
					check for valid date, if not valid then EXIT
					re-schedule all event and active time based tasks (first clear and then add new tasks)
					uses scheduleAllTasks() with createNextSchedule(...)
					
				-d
				dump a list of all current known tasks of the MS WiMo scheduler
				
			Two ARGs
				-s taskX (X being a number)
				-k taskX
				these are the launches as done by WiMo scheduler due to our schedules, TASKER sets up TASKs that launch TASKER
					both use processStartStopCmd(argv)
						clear all kill or start schedules
						get interval from reg
						check for delayed schedule
							if delay > maxDelay use createDelayedNextSchedule(...) to calc new schedule time
							else use createNextSchedule(...)
							schedule kill or start task
							
							if delayed schedule
								do not execute a kill or start!
							else
								if onAcPowerOnly is set and AC is there: start exe
								else do not start exe
								kill exe without check of AC
								
					
				-r taskX
				remove task number X
					remove taskX calls from scheduler
					set the active flag of task X in REG to zero
				
				-a taskX
				add task number X
					set REG active flag for taskX to 1
					clear possible taskX schedules
					re-schedule start and kill tasks for taskX
					uses createNextSchedule(...)


The scheduler will execute tasks that have been missed in the past if the time is changed to future time

Time change events are fired all the day for no time changes


